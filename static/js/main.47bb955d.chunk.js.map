{"version":3,"sources":["ThreeCard.js","WeekCards.js","AllGood.js","LHGood.js","Form.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["ThreeCard","name","threeArr","className","WeekCards","splitLeft","whole","props","array","slice","Math","ceil","length","this","map","card","Component","AllGood","Things","sort","a","b","number","week","week_name","things","LHGood","id","LHThings","Form","useState","success","setSuccess","onSubmit","e","preventDefault","fetch","method","body","FormData","target","then","response","catch","error","console","message","reset","for","type","placeholder","required","Home","to","App","style","textDecoration","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47bb955d.chunk.js","sourcesContent":["import React from 'react';\n\nconst ThreeCard = ({name, threeArr}) => {\n    return (\n        <div className=\"card-container\">\n            <h3>{name}</h3>\n            <ol  className=\"card-list\">\n            <li className=\"card-text\">{threeArr[0]}</li>\n            { threeArr[1] ? <li className=\"card-text\">{threeArr[1]}</li> : null}\n            { threeArr[2] ? <li className=\"card-text\">{threeArr[2]}</li> : null}\n            </ol>\n        </div>\n    );\n};\n\nexport default ThreeCard; ","import React, { Component } from 'react';\nimport ThreeCard from './ThreeCard'\n\nclass WeekCards extends Component {\n\n    splitLeft = () => {\n        const whole = this.props.array\n        const left = whole.slice(0, Math.ceil(whole.length/2))\n        const right = whole.slice(Math.ceil(whole.length/2))\n        return [left, right]\n    } \n\n    render() {\n        return (\n            <div>\n                <div className=\"columns\">\n                            <div className=\"column\">\n                            {this.splitLeft()[0].map((card) => {return(<ThreeCard name={card[0]} threeArr={card[1]} />)})}\n                            </div>\n                            <div className=\"column\">\n                            {this.splitLeft()[1].map((card) => {return(<ThreeCard name={card[0]} threeArr={card[1]} />)})}\n                            </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WeekCards;\n","import React from 'react';\nimport './index.css';\nimport Things from './Things.json'\nimport ThreeCard from './ThreeCard'\nimport WeekCards from './WeekCards'\n\nconst AllGood = () => {\n    return (\n        <div>\n            {Things.sort((a,b) => (a.number < b.number) ? 1 : -1).map((week) => {\n                return(\n                    <div className=\"week-container\">\n                        <h2 className=\"week-name\">{week.week_name}</h2>\n                        <WeekCards array={week.things} />\n                    </div>\n                )\n            })}\n        </div>\n    );\n}\n\nexport default AllGood;\n","import React from 'react';\nimport './index.css';\nimport LHThings from './LHThings.json'\nimport ThreeCard from './ThreeCard'\n\nconst LHGood = () => {\n    return (\n            <div className=\"lh-home\">\n        \n        <p>When James was six, he struggled with nightmares. They woke him at night, and then he woke us with his heartbreaking cries. I started experimenting with calming bedtime rituals. I tried hanging a dreamcatcher over his bed. I sang  “Michael Row Your Boat Ashore” softly and off-key. I lay quietly beside him as he tossed and turned.  Nothing worked. He’d wake in the morning, tired and anxious--already fearful of the night to come.\n       </p>\n       <p> One night, having exhausted all other ideas, I said, </p>\n          <p id=\"lh-quote\"> “How about I give you three good things to think about?” </p>\n           <p>He responded with silence, which I took as tacit consent.  So I named the first three things that came to mind: an upcoming trip to visit our dear friends Ann and Laura in Woodstock;  constructing buildings with his PlayMobil combo of Royal Princess Castle and Fort Eagle; making cookies with his good friend Ben.  \n       </p>\n       <p> The following morning he seemed a bit more rested and relaxed. I didn’t probe--sometimes it’s best to let things be.\n       </p>\n       <p> The next night, just as I was leaving his bedroom, he called out: “ Can you give me three things?”  I offered the first three things that came to mind.  He pulled up the covers, settled into his pillow, and I walked out, leaving the door ajar. Twenty minutes later when I peeked in, I saw the stillness that comes from peaceful sleep.\n       </p>\n       <p> That was the beginning of the Three Good Things. \n       </p>\n       <p> Yesterday, it occurred to me that I could use three good things. And since we are all in need of a little light, I figured I would share them with the people I care about.\n        </p>\n        \n        <div> \n           <ThreeCard name=\"Three Good Things\" threeArr={['Zoom.  The platform has all kinds of nifty features like live chat, screen share, and the all-important mute button. This week I discovered that it also enables community magic.  On Wednesday, our church fundraising committee zoom meeting started out bleak: a congregant has contracted the virus; our inside track revealed that the city is even less prepared than we thought; our church’s finances are now way more precarious than they were last week. But when I looked at each person’s face, right above the pinched mouths and just behind the concerned eyes, I could see the immense gratitude of being in each other’s presence.  After acknowledging that all the work we’d done on our big event plans were in limbo, we started brainstorming creative solutions. With each new idea, another face brightened, another frown turned to a smile. One smile led to another idea.  We were hunkered down in our own private sanctuaries, but we were also at church. Anxiety had turned into action, despair had turned into faith. Turns out Zoom has way more features than a group mute button.', 'Toilet Paper. Who knew it was the bedrock of civilization?','Carbs. I know it is not a long term solution, but a defrosted Brooklyn bagel toasted and smeared with peanut butter is an excellent anti-anxiety med.  Preferably followed by a chocolate cake chaser.']}/>\n        </div>\n        \n        \n        <p> I’m going to try to give myself, and whoever else wants them, three good things once a week. \n        </p> \n        <p className=\"center\">Much love,<br/>\n        Lisa</p>\n\n        <br/><br/>\n        <h2>Past Good Things:</h2>\n        <br/><br/>\n            {LHThings.sort((a,b) => (a.number < b.number) ? 1 : -1).map((week) => {\n                return(\n                    <><ThreeCard name={week.week_name} threeArr={week.things} /><br/><br/></>\n                )\n            })}\n        </div>\n    );\n}\n\nexport default LHGood;\n","import React, { useState } from 'react';\n\nconst Form = () => {\n    const [success, setSuccess] = useState(false);\n\n    const submit = (e) => {\n        e.preventDefault()\n        // debugger;\n        fetch('https://script.google.com/macros/s/AKfycbwC3b4uWJWJ4iS3n1UJSiKz2FyOorUiRJg8k8zuttWvj5hD36eh/exec', { method: 'POST', body: new FormData(e.target)})\n          .then(response => setSuccess(true))\n          .catch(error => console.error('Error!', error.message))\n        e.target.reset()\n    }\n\n    return (\n        <div>\n        <p>Get three good things in your inbox:</p>\n        <form onSubmit={submit} name=\"submit-to-google-sheet\">\n        <label for=\"name\">Name</label>\n        <input name=\"name\" type=\"text\" placeholder=\"Name\"></input>\n        <label for=\"email\">Email</label>\n        <input name=\"email\" type=\"email\" placeholder=\"Email\" required></input>\n        {success ? <p>Thank you!</p> : null}\n        <button className=\"form-button\" type=\"submit\">Send</button>\n        </form>\n        \n        </div>\n    );\n}\n\nexport default Form;\n","import React from 'react';\nimport './index.css';\nimport Form from './Form'\nimport {\n    Link\n  } from \"react-router-dom\";\n\nconst Home = () => {\n    return (\n        <div className=\"home\">\n            <div className=\"home-cont\">\n                <div className=\"left-item\">\n                    <h2 className=\"home-h2 big\">Last week,  I realized I could use <Link to=\"/lh-good\"><span className=\"home-link\">three good things</span></Link>. Then  I shared them with some of my friends.  It helped a bit. Then they shared theirs with me. That helped even more.</h2>\n                    <h2 className=\"home-h2 med\">Then James, the original Three Good Things practitioner, made a website for everyone's good things.</h2>\n                    <h2 className=\"home-h2 sm\">Thanks to everyone for sharing their Three Good Things. It helps. </h2>\n                </div>\n                <div className=\"right-item\">\n                    <div className=\"tarot-standin\"></div>\n                </div>\n                \n            </div>\n                     \n        <Form />\n\n            \n        </div>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport './index.css';\nimport AllGood from './AllGood';\nimport LHGood from './LHGood';\nimport Home from './Home';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// JSON TEMPLATES:\n// {\"number\": 1, \"week_name\": \"March 23rd, 2020\", \"things\": [\"0\", \"1\", \"2\"]}\n// {\"number\": 1, \"week_name\": \"March 23rd, 2020\", \"things\": [[\"name\", [\"1\", \"2\", \"3\"]],[\"name\", [\"1\", \"2\", \"3\"]]]}\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <div className=\"header\">\n        <div className=\"top\"><Link to=\"/\" style={{ textDecoration: 'none' }}><div className=\"top-text\"><h1>3 Good Things</h1></div></Link></div>\n        <div className=\"nav\">\n          <div className=\"button-left\"><Link to=\"/lh-good\" style={{ textDecoration: 'none' }}><div className=\"button-text\"><h2 className=\"left-text\">LH's Good Things</h2></div></Link></div>\n          <div className=\"button-right\"><Link to=\"/all-good-things\" style={{ textDecoration: 'none' }}><div className=\"button-text\"><h2 className=\"right-text\">All the Good Things</h2></div></Link></div>\n        </div>\n      </div>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/lh-good\">\n          <LHGood />\n        </Route>\n        <Route exact path=\"/all-good-things\">\n          <AllGood />\n        </Route>\n      </Switch>\n      \n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}